<!DOCTYPE aesl-source>
<network>
<event name="pair_run" size="1"/>
<event name="debug_log" size="14"/>
<node name="USB Serial Device" nodeId="{a4eb4ab4-f591-47b8-ac5e-b2acedbee453}"># variables for state
var state[4] = [0,0,0,0]
var new_state[4] = [0,0,0,0]

# variables for notes
var notes[6]
var durations[6]
var note_index = 6
var note_count = 6
var wave[142]
var i
var wave_phase
var wave_intensity

# compute a sinus wave for sound
for i in 0:141 do
	wave_phase = (i-70)*468
	call math.cos(wave_intensity, wave_phase)
	wave[i] = wave_intensity/256
end
call sound.wave(wave)
# stop timer 0
timer.period[0] = 0
# reset outputs
call sound.system(-1)
call leds.top(0,0,0)
call leds.bottom.left(0,0,0)
call leds.bottom.right(0,0,0)
call leds.circle(0,0,0,0,0,0,0,0)

# subroutine to display the current state
sub display_state
	call leds.circle(0,state[1]*32,0,state[3]*32,0,state[2]*32,0,state[0]*32)

# when a note is finished, play the next note
onevent sound.finished
	if note_index != note_count then
		call sound.freq(notes[note_index], durations[note_index])
		note_index += 1
	end

onevent buttons
	when button.forward == 1 do
		new_state[0] = 1
		new_state[1] = 0
		new_state[2] = 0
		new_state[3] = 0
		call leds.top(0,20,0)
		motor.left.target = 250
		motor.right.target = 250
		emit pair_run 0
		_emit debug_log [0, 0x5, 0x9d71, 0x80, 0, 0x10, 0, 0x35, 0x294, 0xf0f]
	end

	call math.copy(state, new_state)
	callsub display_state


onevent prox
	when prox.horizontal[0] >= 3600 do
		if state[0] == 1 and state[1] == 0 and state[2] == 0 and state[3] == 0 then
			call leds.top(32,32,0)
			new_state[0] = 0
			new_state[1] = 0
			new_state[2] = 1
			new_state[3] = 0
			motor.left.target = -150
			motor.right.target = -200
			timer.period[0] = 1000
			emit pair_run 1
			_emit debug_log [0x1, 0x6, 0xd972, 0xc80, 0x1000, 0x2ee, 0xe10, 0x35, 0x8c40, 0x4d, 0x706, 0x3e8]
		end
	end

	when prox.horizontal[4] >= 3600 do
		if state[0] == 0 and state[1] == 0 and state[2] == 1 and state[3] == 0 then
			new_state[0] = 0
			new_state[1] = 0
			new_state[2] = 1
			new_state[3] = 1
			call leds.top(0,32,32)
			motor.left.target = 200
			motor.right.target = 200
			emit pair_run 3
			_emit debug_log [0x3, 0x5, 0x9d72, 0x80, 0x10, 0x2ee, 0xe10, 0x4d, 0x4c, 0x440, 0xe0e]
		end
	end

	when prox.ground.delta[0] >= 450 and prox.ground.delta[1] >= 450 do
		if state[0] == 0 and state[1] == 1 and state[2] == 1 and state[3] == 1 then
			motor.left.target = 300
			motor.right.target = 300
			timer.period[0] = 1000
			new_state[0] = 1
			new_state[1] = 1
			new_state[2] = 0
			new_state[3] = 0
			emit pair_run 4
			_emit debug_log [0x4, 0x5, 0xc873, 0xd0, 0x5, 0x190, 0x1c2, 0x43, 0x1010, 0x3e8, 0x2c]
		end
	end

	when prox.horizontal[4] >= 3200 do
		if state[0] == 1 and state[1] == 0 and state[2] == 0 and state[3] == 0 then
			call leds.top(0,32,32)
			new_state[0] = 0
			new_state[1] = 0
			new_state[2] = 0
			new_state[3] = 1
			motor.left.target = -250
			motor.right.target = -200
			timer.period[0] = 1000
			emit pair_run 6
			_emit debug_log [0x6, 0x6, 0xd972, 0xc80, 0x10, 0x3e8, 0xc80, 0x35, 0x440, 0x4f, 0x506, 0x3e8]
		end
	end

	when prox.horizontal[0] >= 3200 do
		if state[0] == 0 and state[1] == 0 and state[2] == 0 and state[3] == 1 then
			new_state[0] = 0
			new_state[1] = 0
			new_state[2] = 1
			new_state[3] = 1
			call leds.top(32,32,0)
			motor.left.target = 250
			motor.right.target = 250
			emit pair_run 8
			_emit debug_log [0x8, 0x5, 0x9d72, 0x80, 0x1000, 0x3e8, 0xc80, 0x4f, 0x4c, 0x8c40, 0xf0f]
		end
	end

	when prox.horizontal[2] >= 2400 do
		if state[0] == 1 and state[1] == 0 and state[2] == 0 and state[3] == 0 then
			motor.left.target = -300
			motor.right.target = -300
			new_state[0] = 1
			new_state[1] = 0
			new_state[2] = 0
			new_state[3] = 1
			call leds.top(32,0,32)
			timer.period[0] = 1000
			emit pair_run 9
			_emit debug_log [0x9, 0x6, 0xd872, 0xc90, 0x100, 0x960, 0x960, 0x35, 0x404, 0x34, 0x8840, 0x3e8]
		end
	end

	when prox.ground.delta[0] &lt;= 600 and prox.ground.delta[1] &lt;= 600 do
		if state[0] == 0 and state[1] == 0 and state[2] == 1 and state[3] == 0 then
			motor.left.target = 500
			motor.right.target = 500
			new_state[0] = 0
			new_state[1] = 1
			new_state[2] = 1
			new_state[3] = 1
			emit pair_run 13
			_emit debug_log [0xd, 0x4, 0xd873, 0xa, 0x258, 0x3e8, 0x4d, 0x1414, 0x43]
		end
	end

	when prox.ground.delta[0] &lt;= 525 and prox.ground.delta[1] &lt;= 525 do
		if state[0] == 0 and state[1] == 0 and state[2] == 0 and state[3] == 1 then
			motor.left.target = 500
			motor.right.target = 500
			new_state[0] = 0
			new_state[1] = 1
			new_state[2] = 1
			new_state[3] = 1
			emit pair_run 14
			_emit debug_log [0xe, 0x4, 0xd873, 0xa, 0x20d, 0x3e8, 0x4f, 0x1414, 0x43]
		end
	end

	when prox.ground.delta[0] &lt;= 725 and prox.ground.delta[1] &lt;= 725 do
		if state[0] == 0 and state[1] == 0 and state[2] == 1 and state[3] == 1 then
			motor.left.target = 500
			motor.right.target = 500
			new_state[0] = 0
			new_state[1] = 1
			new_state[2] = 1
			new_state[3] = 1
			emit pair_run 15
			_emit debug_log [0xf, 0x4, 0xd873, 0xa, 0x2d5, 0x3e8, 0x4c, 0x1414, 0x43]
		end
	end

	call math.copy(state, new_state)
	callsub display_state


onevent timer0
	timer.period[0] = 0
	if state[0] == 0 and state[1] == 0 and state[2] == 1 and state[3] == 0 then
		motor.left.target = 150
		motor.right.target = 150
		emit pair_run 2
		_emit debug_log [0x2, 0x3, 0x876, 0x4d, 0xd0d]
	end

	if state[0] == 1 and state[1] == 1 and state[2] == 0 and state[3] == 0 then
		motor.left.target = 0
		motor.right.target = 0
		call math.copy(notes[0:5], [440, 262, 311, 370, 311, 370])
		call math.copy(durations[0:5], [7, 7, 14, 7, 7, 14])
		note_index = 1
		note_count = 6
		call sound.freq(notes[0], durations[0])
		new_state[0] = 0
		new_state[1] = 1
		new_state[2] = 0
		new_state[3] = 1
		call leds.top(32,32,0)
		emit pair_run 5
		_emit debug_log [0x5, 0x6, 0xb876, 0x9d0, 0x2c, 0xa0a, 0x5c48, 0x188, 0x46, 0x8c40]
	end

	if state[0] == 0 and state[1] == 0 and state[2] == 0 and state[3] == 1 then
		motor.left.target = 150
		motor.right.target = 150
		emit pair_run 7
		_emit debug_log [0x7, 0x3, 0x876, 0x4f, 0xd0d]
	end

	if state[0] == 1 and state[1] == 0 and state[2] == 0 and state[3] == 1 then
		motor.left.target = 200
		motor.right.target = -250
		timer.period[0] = 1750
		new_state[0] = 0
		new_state[1] = 1
		new_state[2] = 1
		new_state[3] = 0
		emit pair_run 10
		_emit debug_log [0xa, 0x5, 0xc876, 0xd0, 0x34, 0xe05, 0x6d6, 0x44]
	end

	if state[0] == 0 and state[1] == 1 and state[2] == 1 and state[3] == 0 then
		motor.left.target = 200
		motor.right.target = 200
		new_state[0] = 1
		new_state[1] = 0
		new_state[2] = 0
		new_state[3] = 0
		call leds.top(0,20,0)
		emit pair_run 11
		_emit debug_log [0xb, 0x5, 0xd876, 0x90, 0x44, 0xe0e, 0x35, 0x294]
	end

	if state[0] == 0 and state[1] == 1 and state[2] == 0 and state[3] == 1 then
		new_state[0] = 1
		new_state[1] = 0
		new_state[2] = 0
		new_state[3] = 1
		timer.period[0] = 1250
		call math.copy(notes[0:5], [440, 524, 440, 370, 311, 370])
		call math.copy(durations[0:5], [7, 7, 14, 7, 7, 14])
		note_index = 1
		note_count = 6
		call sound.freq(notes[0], durations[0])
		emit pair_run 12
		_emit debug_log [0xc, 0x5, 0xcd76, 0xb0, 0x46, 0x34, 0x4e2, 0x7238, 0x188]
	end

	call math.copy(state, new_state)
	callsub display_state

<toolsPlugins>
<ThymioVisualProgramming>
<vplroot xml-format-version="1">
<program advanced_mode="1">
<set>
<block value4="0" value3="0" value5="0" value2="0" value1="0" name="button" value6="0" type="event" value0="1"/>
<block value3="0" value2="0" value1="0" name="statefilter" type="state" value0="0"/>
<block value3="2" value2="2" value1="2" name="setstate" type="action" value0="1"/>
<block value2="0" value1="20" name="colortop" type="action" value0="0"/>
<block value1="250" name="move" type="action" value0="250"/>
</set>
<set>
<block value4="0" value3="0" value5="0" value2="0" value1="0" name="prox" value7="750" value6="0" type="event" value0="1" value8="3600"/>
<block value3="2" value2="2" value1="2" name="statefilter" type="state" value0="1"/>
<block value2="0" value1="32" name="colortop" type="action" value0="32"/>
<block value3="2" value2="1" value1="2" name="setstate" type="action" value0="2"/>
<block value1="-200" name="move" type="action" value0="-150"/>
<block name="timer" type="action" value0="1000"/>
</set>
<set>
<block name="timeout" type="event"/>
<block value3="2" value2="1" value1="2" name="statefilter" type="state" value0="2"/>
<block value1="150" name="move" type="action" value0="150"/>
</set>
<set>
<block value4="1" value3="0" value5="0" value2="0" value1="0" name="prox" value7="750" value6="0" type="event" value0="0" value8="3600"/>
<block value3="2" value2="1" value1="2" name="statefilter" type="state" value0="2"/>
<block value3="1" value2="1" value1="2" name="setstate" type="action" value0="2"/>
<block value2="32" value1="32" name="colortop" type="action" value0="0"/>
<block value1="200" name="move" type="action" value0="200"/>
</set>
<set>
<block value3="450" value2="400" value1="1" name="proxground" type="event" value0="1"/>
<block value3="1" value2="1" value1="1" name="statefilter" type="state" value0="2"/>
<block value1="300" name="move" type="action" value0="300"/>
<block name="timer" type="action" value0="1000"/>
<block value3="2" value2="2" value1="1" name="setstate" type="action" value0="1"/>
</set>
<set>
<block name="timeout" type="event"/>
<block value3="2" value2="2" value1="1" name="statefilter" type="state" value0="1"/>
<block value1="0" name="move" type="action" value0="0"/>
<block value4="257" value3="258" value5="514" value2="513" value1="256" name="sound" type="action" value0="259"/>
<block value3="1" value2="2" value1="1" name="setstate" type="action" value0="2"/>
<block value2="0" value1="32" name="colortop" type="action" value0="32"/>
</set>
<set>
<block value4="1" value3="0" value5="0" value2="0" value1="0" name="prox" value7="1000" value6="0" type="event" value0="0" value8="3200"/>
<block value3="2" value2="2" value1="2" name="statefilter" type="state" value0="1"/>
<block value2="32" value1="32" name="colortop" type="action" value0="0"/>
<block value3="1" value2="2" value1="2" name="setstate" type="action" value0="2"/>
<block value1="-200" name="move" type="action" value0="-250"/>
<block name="timer" type="action" value0="1000"/>
</set>
<set>
<block name="timeout" type="event"/>
<block value3="1" value2="2" value1="2" name="statefilter" type="state" value0="2"/>
<block value1="150" name="move" type="action" value0="150"/>
</set>
<set>
<block value4="0" value3="0" value5="0" value2="0" value1="0" name="prox" value7="1000" value6="0" type="event" value0="1" value8="3200"/>
<block value3="1" value2="2" value1="2" name="statefilter" type="state" value0="2"/>
<block value3="1" value2="1" value1="2" name="setstate" type="action" value0="2"/>
<block value2="0" value1="32" name="colortop" type="action" value0="32"/>
<block value1="250" name="move" type="action" value0="250"/>
</set>
<set>
<block value4="0" value3="0" value5="0" value2="1" value1="0" name="prox" value7="2400" value6="0" type="event" value0="0" value8="2400"/>
<block value3="2" value2="2" value1="2" name="statefilter" type="state" value0="1"/>
<block value1="-300" name="move" type="action" value0="-300"/>
<block value3="1" value2="2" value1="2" name="setstate" type="action" value0="1"/>
<block value2="32" value1="0" name="colortop" type="action" value0="32"/>
<block name="timer" type="action" value0="1000"/>
</set>
<set>
<block name="timeout" type="event"/>
<block value3="1" value2="2" value1="2" name="statefilter" type="state" value0="1"/>
<block value1="-250" name="move" type="action" value0="200"/>
<block name="timer" type="action" value0="1750"/>
<block value3="2" value2="1" value1="1" name="setstate" type="action" value0="2"/>
</set>
<set>
<block name="timeout" type="event"/>
<block value3="2" value2="1" value1="1" name="statefilter" type="state" value0="2"/>
<block value1="200" name="move" type="action" value0="200"/>
<block value3="2" value2="2" value1="2" name="setstate" type="action" value0="1"/>
<block value2="0" value1="20" name="colortop" type="action" value0="0"/>
</set>
<set>
<block name="timeout" type="event"/>
<block value3="1" value2="2" value1="1" name="statefilter" type="state" value0="2"/>
<block value3="1" value2="2" value1="2" name="setstate" type="action" value0="1"/>
<block name="timer" type="action" value0="1250"/>
<block value4="257" value3="258" value5="514" value2="515" value1="260" name="sound" type="action" value0="259"/>
</set>
<set>
<block value3="1000" value2="600" value1="2" name="proxground" type="event" value0="2"/>
<block value3="2" value2="1" value1="2" name="statefilter" type="state" value0="2"/>
<block value1="500" name="move" type="action" value0="500"/>
<block value3="1" value2="1" value1="1" name="setstate" type="action" value0="2"/>
</set>
<set>
<block value3="1000" value2="525" value1="2" name="proxground" type="event" value0="2"/>
<block value3="1" value2="2" value1="2" name="statefilter" type="state" value0="2"/>
<block value1="500" name="move" type="action" value0="500"/>
<block value3="1" value2="1" value1="1" name="setstate" type="action" value0="2"/>
</set>
<set>
<block value3="1000" value2="725" value1="2" name="proxground" type="event" value0="2"/>
<block value3="1" value2="1" value1="2" name="statefilter" type="state" value0="2"/>
<block value1="500" name="move" type="action" value0="500"/>
<block value3="1" value2="1" value1="1" name="setstate" type="action" value0="2"/>
</set>
<set>
<block value3="0" value2="0" value1="0" name="statefilter" type="state" value0="0"/>
</set>
</program>
</vplroot>
</ThymioVisualProgramming>
</toolsPlugins>
</node>
</network>
